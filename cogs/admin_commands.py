import discord
from discord import app_commands 
from discord.ext import commands
from database import database as db
from .shop_views import ShopView 
import json

class AdminCommands(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.config = bot.config
        self.embed_color = discord.Color(int(self.config['EMBED_COLOR'], 16))

    shop = app_commands.Group(name="shop", description="C√°c l·ªánh qu·∫£n l√Ω shop role")
    coin = app_commands.Group(name="coin", description="C√°c l·ªánh qu·∫£n l√Ω ti·ªÅn t·ªá")

    @shop.command(name="setup", description="G·ª≠i b·∫£ng ƒëi·ªÅu khi·ªÉn shop v√† t·∫°o thread b·∫£ng x·∫øp h·∫°ng.")
    @app_commands.checks.has_permissions(administrator=True) 
    async def setup_shop(self, interaction: discord.Interaction): 
        await interaction.response.defer(ephemeral=True)

        channel_id = self.config.get('SHOP_CHANNEL_ID')
        if not channel_id:
            return await interaction.followup.send("‚ö†Ô∏è `SHOP_CHANNEL_ID` ch∆∞a ƒë∆∞·ª£c thi·∫øt l·∫≠p.", ephemeral=True)
        
        channel = self.bot.get_channel(int(channel_id))
        if not channel:
            return await interaction.followup.send(f"‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y k√™nh v·ªõi ID `{channel_id}`.", ephemeral=True)
        
        embed = discord.Embed(
            title=self.config['MESSAGES']['SHOP_EMBED_TITLE'],
            description=self.config['MESSAGES']['SHOP_EMBED_DESCRIPTION'],
            color=self.embed_color
        )
        
        if self.config.get('SHOP_EMBED_THUMBNAIL_URL'):
            embed.set_thumbnail(url=self.config.get('SHOP_EMBED_THUMBNAIL_URL'))

        footer_text = self.config['FOOTER_MESSAGES']['SHOP_PANEL']
        embed.set_footer(
            text=f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n{footer_text}", 
            icon_url=self.bot.user.avatar.url
        )
        
        if self.config.get('SHOP_EMBED_IMAGE_URL'):
            embed.set_image(url=self.config.get('SHOP_EMBED_IMAGE_URL'))
        
        view = ShopView(bot=self.bot)

        try:
            panel_message = await channel.send(embed=embed, view=view)
            
            # tao thread bxh
            leaderboard_thread = None
            try:
                # thu lay thread cu neu co
                old_thread_id = self.config.get('LEADERBOARD_THREAD_ID')
                if old_thread_id:
                    old_thread = self.bot.get_channel(int(old_thread_id))
                    if old_thread:
                        await old_thread.edit(archived=True, locked=True) # khoa thread cu
            except Exception:
                pass 

            leaderboard_thread = await panel_message.create_thread(name="üèÜ B·∫£ng X·∫øp H·∫°ng Coin")
            await leaderboard_thread.send("B·∫£ng x·∫øp h·∫°ng s·∫Ω ƒë∆∞·ª£c c·∫≠p nh·∫≠t t·∫°i ƒë√¢y...")
            
            # luu id thread vao config
            with open('config.json', 'r+', encoding='utf-8') as f:
                config_data = json.load(f)
                config_data['LEADERBOARD_THREAD_ID'] = leaderboard_thread.id
                f.seek(0)
                json.dump(config_data, f, indent=2, ensure_ascii=False)
                f.truncate()
            
            # cap nhat config cho bot
            self.bot.config['LEADERBOARD_THREAD_ID'] = leaderboard_thread.id
            
            # khoi dong lai task
            task_cog = self.bot.get_cog('TasksHandler')
            if task_cog:
                task_cog.update_leaderboard.restart()

            await interaction.followup.send(f"‚úÖ ƒê√£ g·ª≠i b·∫£ng ƒëi·ªÅu khi·ªÉn shop t·ªõi {channel.mention} v√† t·∫°o thread B·∫£ng X·∫øp H·∫°ng.", ephemeral=True)
        except discord.Forbidden:
            await interaction.followup.send(f"‚ùå T√¥i kh√¥ng c√≥ quy·ªÅn g·ª≠i tin nh·∫Øn ho·∫∑c t·∫°o thread trong k√™nh {channel.mention}.", ephemeral=True)
        except Exception as e:
            await interaction.followup.send(f"L·ªói kh√¥ng x√°c ƒë·ªãnh: {e}", ephemeral=True)

    @shop.command(name="addrole", description="Th√™m m·ªôt role v√†o shop.")
    @app_commands.describe(role="Role c·∫ßn th√™m", price="Gi√° c·ªßa role") 
    @app_commands.checks.has_permissions(administrator=True)
    async def add_role(self, interaction: discord.Interaction, role: discord.Role, price: int):
        if price < 0:
            return await interaction.response.send_message("‚ö†Ô∏è Gi√° ti·ªÅn kh√¥ng th·ªÉ l√† s·ªë √¢m.", ephemeral=True)

        db.add_role_to_shop(role.id, interaction.guild.id, price)
        await interaction.response.send_message(f"‚úÖ ƒê√£ th√™m role {role.mention} v√†o shop v·ªõi gi√° `{price}` coin.", ephemeral=True)
        
    @shop.command(name="removerole", description="X√≥a m·ªôt role kh·ªèi shop.")
    @app_commands.describe(role="Role c·∫ßn x√≥a")
    @app_commands.checks.has_permissions(administrator=True)
    async def remove_role(self, interaction: discord.Interaction, role: discord.Role):
        db.remove_role_from_shop(role.id, interaction.guild.id)
        await interaction.response.send_message(f"‚úÖ ƒê√£ x√≥a role {role.mention} kh·ªèi shop.", ephemeral=True)

    @coin.command(name="give", description="T·∫∑ng coin cho m·ªôt th√†nh vi√™n.")
    @app_commands.describe(member="Ng∆∞·ªùi nh·∫≠n coin", amount="S·ªë coin mu·ªën t·∫∑ng")
    @app_commands.checks.has_permissions(administrator=True)
    async def give_coin(self, interaction: discord.Interaction, member: discord.Member, amount: int):
        if amount <= 0:
            return await interaction.response.send_message("‚ö†Ô∏è L∆∞·ª£ng coin ph·∫£i l√† s·ªë d∆∞∆°ng.", ephemeral=True)
        
        user_data = db.get_or_create_user(member.id, interaction.guild.id)
        new_balance = user_data['balance'] + amount
        db.update_user_data(member.id, interaction.guild.id, balance=new_balance)
        await interaction.response.send_message(f"‚úÖ ƒê√£ t·∫∑ng `{amount}` coin cho {member.mention}. S·ªë d∆∞ m·ªõi: `{new_balance}` coin.", ephemeral=True)

    @coin.command(name="set", description="Thi·∫øt l·∫≠p s·ªë coin ch√≠nh x√°c cho m·ªôt th√†nh vi√™n.")
    @app_commands.describe(member="Th√†nh vi√™n c·∫ßn set coin", amount="S·ªë coin ch√≠nh x√°c")
    @app_commands.checks.has_permissions(administrator=True)
    async def set_coin(self, interaction: discord.Interaction, member: discord.Member, amount: int):
        if amount < 0:
            return await interaction.response.send_message("‚ö†Ô∏è L∆∞·ª£ng coin kh√¥ng th·ªÉ l√† s·ªë √¢m.", ephemeral=True)

        db.update_user_data(member.id, interaction.guild.id, balance=amount)
        await interaction.response.send_message(f"‚úÖ ƒê√£ ƒë·∫∑t s·ªë d∆∞ c·ªßa {member.mention} th√†nh `{amount}` coin.", ephemeral=True)

async def setup(bot: commands.Bot):
    await bot.add_cog(AdminCommands(bot))